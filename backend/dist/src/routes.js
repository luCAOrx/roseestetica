"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const multer_1 = __importDefault(require("multer"));
const multer_2 = __importDefault(require("./config/multer"));
const AgendamentoController_1 = __importDefault(require("./controllers/AgendamentoController"));
const CidadesController_1 = __importDefault(require("./controllers/CidadesController"));
const ClienteController_1 = __importDefault(require("./controllers/ClienteController"));
const GenerosController_1 = __importDefault(require("./controllers/GenerosController"));
const HorariosController_1 = __importDefault(require("./controllers/HorariosController"));
const ProcedimentosController_1 = __importDefault(require("./controllers/ProcedimentosController"));
const authMidleware_1 = __importDefault(require("./middlewares/authMidleware"));
const AgendamentoValidation_1 = __importDefault(require("./validations/AgendamentoValidation"));
const ClienteValidation_1 = __importDefault(require("./validations/ClienteValidation"));
const routes = (0, express_1.Router)();
const upload = (0, multer_1.default)(multer_2.default);
routes.get('/horarios', HorariosController_1.default.listarHorarios);
routes.get('/generos', GenerosController_1.default.listarGeneros);
routes.get('/cidades', CidadesController_1.default.listarCidades);
routes.get('/procedimentos', ProcedimentosController_1.default.listarProcedimentos);
// ROTAS PARA CLIENTE
routes.post('/login', ClienteController_1.default.autenticar);
routes.post('/refresh_token', ClienteController_1.default.refreshToken);
routes.post('/cadastro', upload.single('foto'), ClienteValidation_1.default.cadastrar, ClienteController_1.default.cadastrar);
routes.put('/atualizar_dados_pessoais/:id', authMidleware_1.default, ClienteValidation_1.default.atualizarDadosPessoais, ClienteController_1.default.atualizarDadosPessoais);
routes.put('/atualizar_endereco/:id', authMidleware_1.default, ClienteValidation_1.default.atualizarEndereço, ClienteController_1.default.atualizarEndereço);
routes.put('/atualizar_login/:id', authMidleware_1.default, ClienteValidation_1.default.atualizarLogin, ClienteController_1.default.atualizarLogin);
routes.post('/atualizar_foto/:id', upload.single('foto'), authMidleware_1.default, ClienteController_1.default.atualizarFoto);
routes.post('/esqueci_minha_senha/', ClienteValidation_1.default.esqueciMinhaSenha, ClienteController_1.default.esqueciMinhaSenha);
routes.put('/atualizar_senha/', ClienteValidation_1.default.atualizarSenha, ClienteController_1.default.atualizarSenha);
routes.delete('/deletar/:id', authMidleware_1.default, ClienteController_1.default.deletar);
// AGENDAMENTOS PARA O CLIENTE
routes.get('/agendamentos_disponiveis', authMidleware_1.default, AgendamentoController_1.default.listarHorariosDisponiveis);
routes.get('/meus_agendamentos/:cliente_id', authMidleware_1.default, AgendamentoController_1.default.listarAgendamentosDoCliente);
routes.get('/detalhes_do_agendamento/:id/:agendamento_id', authMidleware_1.default, AgendamentoController_1.default.detalhesDoAgendamento);
routes.post('/agendar/:id', authMidleware_1.default, AgendamentoValidation_1.default.agendar, AgendamentoController_1.default.agendar);
routes.put('/remarcar/:id/:cliente_id', authMidleware_1.default, AgendamentoValidation_1.default.remarcar, AgendamentoController_1.default.remarcar);
routes.put('/alterar_procedimento/:agendamento_id', authMidleware_1.default, AgendamentoValidation_1.default.alterarProcedimento, AgendamentoController_1.default.alterarProcedimento);
routes.delete('/cancelar/:id', authMidleware_1.default, AgendamentoController_1.default.cancelar);
exports.default = routes;
